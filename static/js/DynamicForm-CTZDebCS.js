var i=(f,s,a)=>new Promise((l,r)=>{var n=e=>{try{u(a.next(e))}catch(o){r(o)}},v=e=>{try{u(a.throw(e))}catch(o){r(o)}},u=e=>e.done?l(e.value):Promise.resolve(e.value).then(n,v);u((a=a.apply(f,s)).next())});import{d as y,r as m,c as C,o as F,a as _,i as p,l as w,n as V,b,u as x,F as c,t as D,m as k}from"./index-BXrVItfM.js";import{l as B}from"./index-DZ4-hzfw.js";const I={class:"bg-white rounded p-4 h-full overflow-y-auto"},N={class:"mt-4"},E=y({__name:"DynamicForm",setup(f){const s=B(),a=m(),l=m(),r=m(null),n=m({});i(null,null,function*(){const o=yield s.getItem("test_form_config");o?(a.value=c.parseJson(o.options),l.value=c.parseJson(o.rule)):(a.value={},l.value=[])});const u=()=>i(null,null,function*(){const o=yield s.getItem("dynamic_form_data");o&&(n.value=o)}),e=o=>i(null,null,function*(){yield s.setItem("dynamic_form_data",o),k("表单数据已保存到本地存储",{type:"success"})});return(o,t)=>{const g=b("el-button");return F(),C("div",I,[_(g,{onClick:u},{default:w(()=>t[2]||(t[2]=[V("载入上次结果",-1)])),_:1,__:[2]}),_(x(c),{modelValue:n.value,"onUpdate:modelValue":t[0]||(t[0]=d=>n.value=d),api:r.value,"onUpdate:api":t[1]||(t[1]=d=>r.value=d),rule:l.value,option:a.value,onSubmit:e},null,8,["modelValue","api","rule","option"]),p("div",N,[t[3]||(t[3]=p("h4",null,"表单填写数据",-1)),p("pre",null,D(n.value),1)])])}}});export{E as default};
